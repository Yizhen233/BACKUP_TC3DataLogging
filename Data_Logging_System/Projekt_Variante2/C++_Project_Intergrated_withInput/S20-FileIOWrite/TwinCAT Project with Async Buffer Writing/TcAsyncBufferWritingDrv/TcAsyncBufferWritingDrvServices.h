///////////////////////////////////////////////////////////////////////////////
// TcAsyncBufferWritingDrvServices.h

#pragma once

#include "TcServices.h"

const ULONG DrvID_TcAsyncBufferWritingDrv = 0xF0000000;
#define SRVNAME_TCASYNCBUFFERWRITINGDRV "TcAsyncBufferWritingDrv"

///<AutoGeneratedContent id="ClassIDs">
const CTCID CID_TcAsyncBufferWritingDrvCTcAsyncBufferWritingModule = {0xfc81c8de,0xb8a7,0x4666,{0xb5,0x3d,0x33,0xe9,0x59,0x99,0x94,0xab}};
///</AutoGeneratedContent>

///<AutoGeneratedContent id="ParameterIDs">
const PTCID PID_TcAsyncBufferWritingModuleParameter = 0x00000001;
///</AutoGeneratedContent>

///<AutoGeneratedContent id="InterfaceIDs">
///</AutoGeneratedContent>

///<AutoGeneratedContent id="DataTypes">
typedef struct _TcAsyncBufferWritingModuleParameter
{
	ULONG SegmentSize;
	ULONG Timeout;
} TcAsyncBufferWritingModuleParameter, *PTcAsyncBufferWritingModuleParameter;

#pragma pack(push,1)
typedef struct _TcAsyncBufferWritingModuleInputs
{
	bool DisableWrite;
	double Troom1;
	double Twasser;
	bool Conti1_Event0;
	bool Event;
	double Troom2;
	double setWasserT;
	double setAussenT;
	double setRaumT1;
	double setRaumT2;
	double a;
	double b;
	double b2;
} TcAsyncBufferWritingModuleInputs, *PTcAsyncBufferWritingModuleInputs;
#pragma pack(pop)

typedef struct _TcAsyncBufferWritingModuleOutputs
{
	ULONG BytesWritten;
	bool WriteActive;
	double setwasserT;
} TcAsyncBufferWritingModuleOutputs, *PTcAsyncBufferWritingModuleOutputs;

///</AutoGeneratedContent>

///<AutoGeneratedContent id="DataAreaIDs">
#define ADI_TcAsyncBufferWritingModuleInputs 0
#define ADI_TcAsyncBufferWritingModuleOutputs 1
///</AutoGeneratedContent>

///<AutoGeneratedContent id="EventClasses">
///</AutoGeneratedContent>
